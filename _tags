# OASIS_START
# DO NOT EDIT (digest: a33c3a1d036dfb834a97fa13e22d106b)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Executable srslyd
<src/srslyd.{native,byte}>: pkg_srs
<src/srslyd.{native,byte}>: pkg_str
<src/srslyd.{native,byte}>: pkg_uint.uint32
<src/srslyd.{native,byte}>: pkg_uint.uint128
<src/srslyd.{native,byte}>: pkg_release
<src/srslyd.{native,byte}>: pkg_release.config
<src/srslyd.{native,byte}>: pkg_lwt
<src/srslyd.{native,byte}>: pkg_lwt.unix
<src/srslyd.{native,byte}>: pkg_lwt.syntax
# Executable srsly-policyd
<src/srsly_policyd.{native,byte}>: pkg_spf
<src/srsly_policyd.{native,byte}>: pkg_srs
<src/srsly_policyd.{native,byte}>: pkg_str
<src/srsly_policyd.{native,byte}>: pkg_unix
<src/srsly_policyd.{native,byte}>: pkg_threads
<src/srsly_policyd.{native,byte}>: pkg_uint.uint32
<src/srsly_policyd.{native,byte}>: pkg_uint.uint128
<src/srsly_policyd.{native,byte}>: pkg_release
<src/srsly_policyd.{native,byte}>: pkg_release.config
<src/srsly_policyd.{native,byte}>: pkg_lwt
<src/srsly_policyd.{native,byte}>: pkg_lwt.unix
<src/srsly_policyd.{native,byte}>: pkg_lwt.syntax
<src/srsly_policyd.{native,byte}>: pkg_lwt.preemptive
# Executable srsly-milter-in
<src/srsly_milter_in.{native,byte}>: pkg_milter
<src/srsly_milter_in.{native,byte}>: pkg_spf
<src/srsly_milter_in.{native,byte}>: pkg_srs
<src/srsly_milter_in.{native,byte}>: pkg_str
<src/srsly_milter_in.{native,byte}>: pkg_unix
<src/srsly_milter_in.{native,byte}>: pkg_threads
<src/srsly_milter_in.{native,byte}>: pkg_uint.uint32
<src/srsly_milter_in.{native,byte}>: pkg_uint.uint128
<src/srsly_milter_in.{native,byte}>: pkg_release
<src/srsly_milter_in.{native,byte}>: pkg_release.config
<src/srsly_milter_in.{native,byte}>: pkg_lwt
<src/srsly_milter_in.{native,byte}>: pkg_lwt.unix
<src/srsly_milter_in.{native,byte}>: pkg_lwt.syntax
<src/srsly_milter_in.{native,byte}>: pkg_lwt.preemptive
# Executable srsly-milter-out
<src/srsly_milter_out.{native,byte}>: pkg_milter
<src/srsly_milter_out.{native,byte}>: pkg_spf
<src/srsly_milter_out.{native,byte}>: pkg_srs
<src/srsly_milter_out.{native,byte}>: pkg_str
<src/srsly_milter_out.{native,byte}>: pkg_unix
<src/srsly_milter_out.{native,byte}>: pkg_threads
<src/srsly_milter_out.{native,byte}>: pkg_uint.uint32
<src/srsly_milter_out.{native,byte}>: pkg_uint.uint128
<src/srsly_milter_out.{native,byte}>: pkg_release
<src/srsly_milter_out.{native,byte}>: pkg_release.config
<src/srsly_milter_out.{native,byte}>: pkg_lwt
<src/srsly_milter_out.{native,byte}>: pkg_lwt.unix
<src/srsly_milter_out.{native,byte}>: pkg_lwt.syntax
<src/srsly_milter_out.{native,byte}>: pkg_lwt.preemptive
<src/*.ml{,i}>: pkg_milter
<src/*.ml{,i}>: pkg_spf
<src/*.ml{,i}>: pkg_srs
<src/*.ml{,i}>: pkg_str
<src/*.ml{,i}>: pkg_unix
<src/*.ml{,i}>: pkg_threads
<src/*.ml{,i}>: pkg_uint.uint32
<src/*.ml{,i}>: pkg_uint.uint128
<src/*.ml{,i}>: pkg_release
<src/*.ml{,i}>: pkg_release.config
<src/*.ml{,i}>: pkg_lwt
<src/*.ml{,i}>: pkg_lwt.unix
<src/*.ml{,i}>: pkg_lwt.syntax
<src/*.ml{,i}>: pkg_lwt.preemptive
# OASIS_STOP
<*/*.ml>: annot
<*/*.ml>: warn_error_A
<src/policy.ml>: syntax_camlp4o
<src/postfix.ml>: syntax_camlp4o
<src/srslyd.ml>: syntax_camlp4o
<src/srsly_policyd.ml>: syntax_camlp4o
<src/srsly_milter_*.ml>: syntax_camlp4o
<src/milter_util.ml>: syntax_camlp4o
