.TH srslyd.conf 5 "srslyd configuration file"

.SH NAME
.B srslyd.conf
\- Configuration file for srslyd(8)

.SH SYNOPSYS
.B /etc/srsly/srslyd.conf

.SH DESCRIPTION
.I srslyd(8)
reads configuration settings from
.I /etc/srsly/srslyd.conf
(or the configuration file given as a command-line parameter).  The file
contains keyword-argument pairs, one per line, organized into sections.
Blank lines are ignored.  Comments start with `#' and extend until the end of
the line.

Sections are defined by their name enclosed in square brackets, `[' and `]'.
A configuration parameter belongs to the section directly above it in the
configuration file.

Each section is composed of a number of
.I key = value
pairs, one per line.  Values can be of one of the following types

.IP \(bu
.I booleans,
represented by the values
.I true
and
.I false.
.IP \(bu
.I integers,
represented by bare numbers.
.IP \(bu
.I strings,
represented by values enclosed by double quotes, `"'.
.IP \(bu
.I regular expressions,
represented by values enclosed by forward slashes, `/'.
.IP \(bu
.I log levels,
represented by the usual
syslog log levels, that is,
.I debug,
.I info,
.I notice,
.I warning,
.I error,
and
.I fatal.
.IP \(bu
.I lists,
represented by values of one of the above types, enclosed by square brackets,
`[' and `]', and separated by commas, `,'.

.SH SECTIONS
.SS srslyd
This section container the parameters of the srslyd(8) daemon itself.

.TP
.I lock_file (string)
Sets the path of the lock file used by srslyd(*).  Defaults to
"/var/run/srslyd.pid".

.TP
.I control_socket (string)
Sets the path of the control socket used by srslyd(8).  This socket is used by
the srsly(1) tool to send commands to the daemon.  Defaults to
"/var/run/srslyd.sock".

.TP
.I log_level (log level)
Sets the verbosity level that is used when logging messages from srslyd(8).
Defaults to notice.

.TP
.I background (boolean)
Defines if srslyd(8) will become and daemon and run in background.  If set to
false, log messages will be displayed on stdout instead of sent to syslog.
Defaults to true.

.TP
.I random_device (string)
Sets the character device to be used for random number generation.  Defaults
to "/dev/urandom".

.SS milter
This section configures milter-related parameters.

.TP
.I user (string)
Sets the user that the srsly-milter process created by srslyd(8) will run
as. The srsly-milter process will chroot to that user's home directory.
Defaults to "srsly".

.TP
.I listen_address (string)
Defines the listen address for the milter service. This parameter must follow
the syntax of milter socket specifications, as indicated below.
.TP
.IP \(bu
.I {unix|local}:/path/to/file
\(em a named pipe.
.IP \(bu
.I inet:port@{hostname|ip-address}
\(em an IPV4 socket.
.IP \(bu
.I inet6:port@{hostname|ip-address}
\(em an IPV6 socket.

.TP
.I debug_level (integer)
Sets the milter debug level.  Must be an integer between 0 and 6.  Defaults to
0.

.SS proxymap
This section contains parameters that control how srslyd(8) communicates with
Postfix via the
.I proxymap
socket.

.TP
.I sender_lookup_table (string)
Defines which Postfix lookup table will be used to check if the MAIL FROM
address is local or remote. Defaults to "hash:/etc/aliases".

Note that
.I sender_lookup_table
must be present in the
.I proxy_read_maps
setting in the Postfix configuration in order for queries to work.

.TP
.I sender_lookup_key_format (string)
Defines the key to be used in the
.I proxymap
query.
This format accepts the following format strings, replaced by srslyd(8) when
the query is created.
.IP \(bu
.I {a}
\(em the whole email address.
.IP \(bu
.I {d}
\(em the domain of the email address.
.IP \(bu
.I {u}
\(em the user (local-part) of the email address.

Defaults to "{a}".

.TP
.I local_sender_regexp (regular expression)
Sets the regular expression used to match against the result of the sender
address query.  If none of the results match the given regular expression,
the sender is considered to be remote.

.TP
.I recipient_lookup_table (string)
This parameter is analogous to
.I sender_lookup_table,
but used for recipient address queries. Defaults to "hash:/etc/aliases".

.TP
.I recipient_lookup_key_format (string)
This setting is analogous to
.I sender_lookup_key_format,
but used to build the recipient query key. Defaults to "{a}".

.TP
.I local_recipient_regexp (regular expression)
Analogous to
.I local_recipient_regexp
but used to decide if recipients are local or remote.

.TP
.I query_format (string)
Configures the format of the query string sent to postfix. This pattern may
contain the following format strings, which are replaced by srslyd(8) when the
query is created:
.IP \(bu
.I {f}
\(em the query flags.
.IP \(bu
.I {k}
\(em the query key.
.IP \(bu
.I {t}
\(em the lookup table name.

Defaults to "request\\000lookup\\000table\\000{t}\\000flags\\000{f}\\000key\\000{k}\\000\\000"

.TP
.I query_flags (integer)
This parameter represents the result of the bitwise logical or of the Postfix
query flags. As of Postfix 2.9.4, these are:
.IP \(bu
.I DICT_FLAG_NONE
(0)
.IP \(bu
.I DICT_FLAG_DUP_WARN
(1<<0)
.IP \(bu
.I DICT_FLAG_DUP_IGNORE
(1<<1)
.IP \(bu
.I DICT_FLAG_TRY0NULL
(1<<2)
.IP \(bu
.I DICT_FLAG_TRY1NULL
(1<<3)
.IP \(bu
.I DICT_FLAG_FIXED
(1<<4)
.IP \(bu
.I DICT_FLAG_PATTERN
(1<<5)
.IP \(bu
.I DICT_FLAG_LOCK
(1<<6)
.IP \(bu
.I DICT_FLAG_DUP_REPLACE
(1<<7)
.IP \(bu
.I DICT_FLAG_SYNC_UPDATE
(1<<8)
.IP \(bu
.I DICT_FLAG_DEBUG
(1<<9)
.IP \(bu
.I DICT_FLAG_NO_REGSUB
(1<<11)
.IP \(bu
.I DICT_FLAG_NO_PROXY
(1<<12)
.IP \(bu
.I DICT_FLAG_NO_UNAUTH
(1<<13)
.IP \(bu
.I DICT_FLAG_FOLD_FIX
(1<<14)
.IP \(bu
.I DICT_FLAG_FOLD_MUL
(1<<15)
.IP \(bu
.I DICT_FLAG_FOLD_ANY
(DICT_FLAG_FOLD_FIX|DICT_FLAG_FOLD_MUL)
.IP \(bu
.I DICT_FLAG_OPEN_LOCK
(1<<16)

The default value is 16448, which corresponds to
(DICT_FLAG_LOCK | DICT_FLAG_FOLD_FIX).

.TP
.I query_socket (string)
The location of the
.I proxymap
socket on the file system. Defaults to "/var/spool/postfix/private/proxymap".

.TP
.I sender_query_max_depth (integer)
Specifies the maximum recursion depth on
.I proxymap
queries for sender lookups. Defaults to 1.

.TP
.I recipient_query_max_depth (integer)
Specifies the maximum recursion depth on
.I proxymap
queries for recipient lookups. Defaults to 20.

.TP
.I sender_query_max_results (integer)
Specifies the maximum number of results returned from
.I proxymap
queries for sender lookups. Defaults to 1.

.TP
.I recipient_query_max_results (integer)
Specifies the maximum number of results returned from
.I proxymap
queries for recipient lookups. Defaults to 100.

.TP
.I result_format (string)
Defines the format of the response sent by
.I proxymap.
This pattern may contain the following format strings.
.IP \(bu
.I {s}
\(em the result status code.
.IP \(bu
.I {v}
\(em the result value.

Defaults to "status\\000{s}\\000value\\000{v}\\000\\000".

.TP \(bu
.I result_value_separator (regular expression)
Defines the separator to be used when parsing multiple values in the
.I proxymap
result. Defaults to /, */, that is, a comma optionally followed by any number
of spaces.

.SS spf
This section contains SPF-specific parameters.

.TP
.I fail_on_helo_temperror (boolean)
Defines whether a DNS temporary error condition will result in an SPF error
response.  Defaults to true.

.TP
.I local_whitelist (string list)
Defines a list of local IP addresses for which SPF verification will not be run.
Defaults to ["127.0.0.0/8", "::ffff:127.0.0.0/104"].

.TP
.I relay_whitelist (string list)
Defines a list of IP addresses of trusted relays for which SPF verification
will be skipped.  Defaults to [].

.TP
.I result_headers (string list)
Defines which SPF result headers will be added to the message by srsly after
SPF verification.  This can be either "Authentication-Results", the older
"Received-SPF" or both.  Defaults to ["Authentication-Results"].

.SS srs
This section defines the SRS settings used by srslyd(8).

.TP
.I secret_file (string)
Configures the path where srslyd(8) will read the secret used to generate
and SRS-rewritten addresses.  Only the first line of the file will be read;
the rest will be ignored.  Defaults to "/etc/srsly/srs_secret".

.TP
.I secrets_directory (string)
Configured the directory whose files srslyd(8) will read old SRS secrets from.
Replaced SRS secrets are kept in this directory so that they can be used to
reverse SRS-signed addresses in bounce messages.  Please see srsly(1) for
details on changing the SRS secret.  This parameter defaults to
"/etc/srsly/srs_secrets.d".

.TP
.I secret_length (integer)
Defines the length of the random secrets generated by the srsly(1) command.
Defaults to 8.

.TP
.I hash_max_age (integer)
Defines the maximum age of the SRS hash, in days.  Defaults to 8.

.TP
.I hash_length (integer)
Defines the length SRS hash, in days.  Defaults to 8.

.TP
.I separator (string)
Defines the SRS separator character.  Valid separators are `=', `+' and `-'.
Defaults to `='.

.SH FILES

.TP
.I /etc/srsly/srslyd.conf
Default location for this file.
.TP
.I /etc/srsly/srs_secrets
Default location of the SRS secrets file.

.SH SEE ALSO
srsly(1), srslyd(8)

.SH AUTHOR

srsly was written by Andre Nathan.
